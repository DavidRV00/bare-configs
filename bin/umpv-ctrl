#!/usr/bin/env python3

import sys
import os
import socket
import errno
import subprocess
import fcntl
import stat
import string
import re

args = sys.argv[1:]
i = args.index("--") if "--" in args else len(args)
cmds = args[0:i]
mpv_args = args[i+1:]
# print(sys.argv)
# print(args)
# print(cmds)
# print(mpv_args)

SOCK = os.path.join(os.getenv("HOME"), ".umpv_socket")

sock = None
try:
    sock = socket.socket(socket.AF_UNIX)
    sock.connect(SOCK)
except socket.error as e:
    if e.errno == errno.ECONNREFUSED:
        sock = None
        pass  # abandoned socket
    elif e.errno == errno.ENOENT:
        sock = None
        pass # doesn't exist
    else:
        raise e

if sock:
    # Unhandled race condition: what if mpv is terminating right now?
    # for i in range(len(cmds)):
    #     c = cmds[i]

    c = ' '.join(cmds)

    # escape: \ \n "
    # c = c.replace("\\", "\\\\").replace("\"", "\\\"").replace("\n", "\\n").replace(" ", "\ ")
    # c = "\"" + c + "\""

    print(c)

    sock.send((c + "\n").encode("utf-8"))
    # TODO: Get response?

# else:
#     # Let mpv recreate socket if it doesn't already exist.
#
#     opts = (os.getenv("MPV") or "mpv").split()
#     if len(mpv_args) > 0:
#         opts.extend(mpv_args)
#     # opts.extend(["--no-terminal", "--input-ipc-server=" + SOCK,
#     opts.extend(["--no-terminal", "--force-window=immediate", "--keep-open=yes", "--keep-open-pause=no", "--input-ipc-server=" + SOCK,
#                  "--"])
#     opts.extend((fix_filename(c) for c in cmds))
#
#     subprocess.check_call(opts)

